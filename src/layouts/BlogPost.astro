---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
// import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, tags } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.nav-back {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: 1em auto;
			}
			.nav-back a {
				text-decoration: none;
				color: rgb(var(--gray));
			}
			.nav-back a:hover {
				color: rgb(var(--gray-dark));
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.date {
				margin-bottom: 0.25em;
				color: rgb(var(--gray));
				font-size: 0.9em;
			}
			.title h1 {
				margin: 0 0 0.1em 0;
			}
			.tags {
				display: flex;
				flex-wrap: wrap;
				justify-content: center;
				gap: 0.5em;
				margin: 0.25em 0 1em 0;
			}
			.tag {
				font-size: 0.8em;
				color: var(--accent-dark);
				background-color: rgba(var(--accent-rgb), 0.1);
				padding: 0.3em 0.8em;
				border-radius: 999px;
				border: 1px solid rgba(var(--accent-rgb), 0.5);
				text-decoration: none;
				white-space: nowrap;
			}
			.last-updated-on {
				font-style: italic;
				font-size: 0.8em;
			}
		</style>
	</head>

	<body>
		<main>
			<div class="nav-back">
				<a href="/">‚Üê Home</a>
			</div>
			<article>
				<div class="hero-image">
					{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						{tags && tags.length > 0 && (
							<div class="tags">
								{tags.map((tag) => (
									<span class="tag">{tag}</span>
								))}
							</div>
						)}
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
